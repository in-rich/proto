// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: proto/teams/list_team_members.proto

package teams_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	ListTeamMembers_ListTeamMembers_FullMethodName = "/teams.ListTeamMembers/ListTeamMembers"
)

// ListTeamMembersClient is the client API for ListTeamMembers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ListTeamMembersClient interface {
	// Retrieves the members of a team.
	ListTeamMembers(ctx context.Context, in *ListTeamMembersRequest, opts ...grpc.CallOption) (*ListTeamMembersResponse, error)
}

type listTeamMembersClient struct {
	cc grpc.ClientConnInterface
}

func NewListTeamMembersClient(cc grpc.ClientConnInterface) ListTeamMembersClient {
	return &listTeamMembersClient{cc}
}

func (c *listTeamMembersClient) ListTeamMembers(ctx context.Context, in *ListTeamMembersRequest, opts ...grpc.CallOption) (*ListTeamMembersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListTeamMembersResponse)
	err := c.cc.Invoke(ctx, ListTeamMembers_ListTeamMembers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListTeamMembersServer is the server API for ListTeamMembers service.
// All implementations must embed UnimplementedListTeamMembersServer
// for forward compatibility
type ListTeamMembersServer interface {
	// Retrieves the members of a team.
	ListTeamMembers(context.Context, *ListTeamMembersRequest) (*ListTeamMembersResponse, error)
	mustEmbedUnimplementedListTeamMembersServer()
}

// UnimplementedListTeamMembersServer must be embedded to have forward compatible implementations.
type UnimplementedListTeamMembersServer struct {
}

func (UnimplementedListTeamMembersServer) ListTeamMembers(context.Context, *ListTeamMembersRequest) (*ListTeamMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTeamMembers not implemented")
}
func (UnimplementedListTeamMembersServer) mustEmbedUnimplementedListTeamMembersServer() {}

// UnsafeListTeamMembersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ListTeamMembersServer will
// result in compilation errors.
type UnsafeListTeamMembersServer interface {
	mustEmbedUnimplementedListTeamMembersServer()
}

func RegisterListTeamMembersServer(s grpc.ServiceRegistrar, srv ListTeamMembersServer) {
	s.RegisterService(&ListTeamMembers_ServiceDesc, srv)
}

func _ListTeamMembers_ListTeamMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTeamMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListTeamMembersServer).ListTeamMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListTeamMembers_ListTeamMembers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListTeamMembersServer).ListTeamMembers(ctx, req.(*ListTeamMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ListTeamMembers_ServiceDesc is the grpc.ServiceDesc for ListTeamMembers service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ListTeamMembers_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "teams.ListTeamMembers",
	HandlerType: (*ListTeamMembersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTeamMembers",
			Handler:    _ListTeamMembers_ListTeamMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/teams/list_team_members.proto",
}
