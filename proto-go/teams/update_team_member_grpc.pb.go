// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: proto/teams/update_team_member.proto

package teams_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	UpdateTeamMember_UpdateTeamMember_FullMethodName = "/teams.UpdateTeamMember/UpdateTeamMember"
)

// UpdateTeamMemberClient is the client API for UpdateTeamMember service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UpdateTeamMemberClient interface {
	// Updates a team member.
	UpdateTeamMember(ctx context.Context, in *UpdateTeamMemberRequest, opts ...grpc.CallOption) (*TeamMember, error)
}

type updateTeamMemberClient struct {
	cc grpc.ClientConnInterface
}

func NewUpdateTeamMemberClient(cc grpc.ClientConnInterface) UpdateTeamMemberClient {
	return &updateTeamMemberClient{cc}
}

func (c *updateTeamMemberClient) UpdateTeamMember(ctx context.Context, in *UpdateTeamMemberRequest, opts ...grpc.CallOption) (*TeamMember, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TeamMember)
	err := c.cc.Invoke(ctx, UpdateTeamMember_UpdateTeamMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpdateTeamMemberServer is the server API for UpdateTeamMember service.
// All implementations must embed UnimplementedUpdateTeamMemberServer
// for forward compatibility
type UpdateTeamMemberServer interface {
	// Updates a team member.
	UpdateTeamMember(context.Context, *UpdateTeamMemberRequest) (*TeamMember, error)
	mustEmbedUnimplementedUpdateTeamMemberServer()
}

// UnimplementedUpdateTeamMemberServer must be embedded to have forward compatible implementations.
type UnimplementedUpdateTeamMemberServer struct {
}

func (UnimplementedUpdateTeamMemberServer) UpdateTeamMember(context.Context, *UpdateTeamMemberRequest) (*TeamMember, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTeamMember not implemented")
}
func (UnimplementedUpdateTeamMemberServer) mustEmbedUnimplementedUpdateTeamMemberServer() {}

// UnsafeUpdateTeamMemberServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UpdateTeamMemberServer will
// result in compilation errors.
type UnsafeUpdateTeamMemberServer interface {
	mustEmbedUnimplementedUpdateTeamMemberServer()
}

func RegisterUpdateTeamMemberServer(s grpc.ServiceRegistrar, srv UpdateTeamMemberServer) {
	s.RegisterService(&UpdateTeamMember_ServiceDesc, srv)
}

func _UpdateTeamMember_UpdateTeamMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTeamMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpdateTeamMemberServer).UpdateTeamMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UpdateTeamMember_UpdateTeamMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpdateTeamMemberServer).UpdateTeamMember(ctx, req.(*UpdateTeamMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UpdateTeamMember_ServiceDesc is the grpc.ServiceDesc for UpdateTeamMember service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UpdateTeamMember_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "teams.UpdateTeamMember",
	HandlerType: (*UpdateTeamMemberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateTeamMember",
			Handler:    _UpdateTeamMember_UpdateTeamMember_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/teams/update_team_member.proto",
}
